# This workflow runs nightly and pulls in new version of packit and
# outpack_server into this repository, by running the `scripts/update.py`
# script. It also updates orderly.runner using `scripts/update-image.py`.
#
# If any updates are found, a pull request is created with the changes. If an
# open pull request already exists, it is updated instead.
#
# In addition to running automatically, this workflow may be triggered
# manually. When doing so, one may specify a particular Git ref to update
# either package to.
#
# Using the `gh` command-line tool, assuming mrc-1234 is a valid branch on the
# mrc-ide/packit repository:
#
# ```
# gh workflow run -R reside-ic/packit-infra update.yaml -f packit=mrc-1234
# ```

name: Update packages
on:
  schedule:
    - cron: '0 0 * * *' # Daily at midnight UTC

  workflow_dispatch:
    inputs:
      outpack_server:
        description: 'Git ref from which to update outpack_server'
        type: string

      packit:
        description: 'Git ref from which to update packit'
        type: string

      orderly-runner:
        description: 'Tag of the orderly.runner image'
        type: string

  # This is only here to check that the update scripts run correctly.
  # If triggered from a pull request we won't actually push the updated code
  # anywhere.
  pull_request:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v27

      - name: Update outpack_server
        run: nix run .#update outpack_server -- --ref ${{ inputs.outpack_server || 'HEAD' }} --write-commit-log ${{ runner.temp }}/outpack_server.md --resolve-prs
      - name: Update packit
        run: nix run .#update packit -- --ref ${{ inputs.packit || 'HEAD' }} --write-commit-log ${{ runner.temp }}/packit.md --resolve-prs
      - name: Update orderly.runner
        run: nix run .#update-image orderly-runner -- --tag ${{ inputs.orderly-runner || 'main' }}

      - name: Prepare PR message
        uses: actions/github-script@v7
        id: prepare-message
        with:
          script: |
            const fs = require("fs");
            const lf = new Intl.ListFormat('en');

            var packages = [];
            var message = "";
            for (const p of ["outpack_server", "packit"]) {
              if (fs.existsSync(`${process.env.RUNNER_TEMP}/${p}.md`)) {
                var sources = JSON.parse(fs.readFileSync(`packages/${p}/sources.json`));
                message += `# Updating ${p} to ${sources.src.rev}\n`;
                message += fs.readFileSync(`${process.env.RUNNER_TEMP}/${p}.md`);
                packages.push(p);
              }
            }
            core.setOutput('title', "Update " + lf.format(packages));
            core.setOutput('body', message);

      - name: Show update diff
        run: |
          echo "$COMMIT_TITLE"
          echo "$COMMIT_BODY"
          git diff
        env:
          COMMIT_TITLE: ${{ steps.prepare-message.outputs.title }}
          COMMIT_BODY:  ${{ steps.prepare-message.outputs.body }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        if: github.event_name != 'pull_request'
        id: create-pr
        with:
          branch: actions/update-packages
          title: ${{ steps.prepare-message.outputs.title }}
          body: ${{ steps.prepare-message.outputs.body }}
          commit-message: |
            ${{ steps.prepare-message.outputs.title }}

            ${{ steps.prepare-message.outputs.body }}

          reviewers: plietar

          # Pull requests created by a GitHub action's GITHUB_TOKEN don't run
          # actions on them. The workaround is to use a token tied to an
          # account to do this. We use the vimc-robot account to do this.
          #
          # It will push the changes to its own fork and create a pull request
          # from there.
          token: ${{ secrets.VIMC_ROBOT_GITHUB_TOKEN }}
          push-to-fork: vimc-robot/packit-infra

      - name: Comment hint
        uses: thollander/actions-comment-pull-request@v3
        if: github.event_name != 'pull_request' && steps.create-pr.outputs.pull-request-operation == 'created'
        with:
          pr-number: ${{ steps.create-pr.outputs.pull-request-number }}
          message: |
            You can deploy this pull request to `wpia-packit-dev` by running the following command:

            ```sh
            nix run --refresh "github:${{ github.repository }}?ref=refs/pull/${{ steps.create-pr.outputs.pull-request-number }}/merge#deploy" wpia-packit-dev
            ```

            After merging this pull request, you must deploy the `${{ github.event.repository.default_branch }}` branch to each host by running the following command:

            ```sh
            nix run --refresh "github:${{ github.repository }}#deploy" <hostname>
            ```

            See the ["Updating Packit"][playbook] for more details on what to do with this pull request.

            [playbook]: https://github.com/reside-ic/packit-infra/blob/main/playbooks/updating-packit.md
